name: SoundSieve App CI/CD

on:
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-west-3
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js 18.x
      uses: docker://node:18-alpine
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js 18.x
      uses: docker://node:18-alpine
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js 18.x
      uses: docker://node:18-alpine
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install

    - name: Build application
      run: npm run build

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js 18.x
      uses: docker://node:18-alpine
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install

    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v15.0.0
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        region: ${{ env.AWS_REGION }}
        application_name: 'soundsieve'
        environment_name: 'soundsieve-env'
        version_label: 'v1'
        deployment_package: '.'
        wait_for_deployment: true

  notify:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
    - name: Notify on Telegram
      uses: appleboy/telegram-action@v0.1.3
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: 'The application has been deployed successfully to AWS Elastic Beanstalk.'